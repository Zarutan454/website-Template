# BSN Social Network - Kubernetes Auto-scaling Configuration
# Optimized for high availability and scalability

apiVersion: v1
kind: Namespace
metadata:
  name: bsn-production
  labels:
    name: bsn-production
    environment: production

---
# ConfigMap for environment variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: bsn-config
  namespace: bsn-production
data:
  DJANGO_SETTINGS_MODULE: "bsn.settings.production"
  DATABASE_URL: "postgresql://bsn_user:bsn_password@bsn-postgres:5432/bsn_db"
  REDIS_URL: "redis://bsn-redis:6379/0"
  CELERY_BROKER_URL: "redis://bsn-redis:6379/1"
  CELERY_RESULT_BACKEND: "redis://bsn-redis:6379/2"
  SECRET_KEY: "your-secret-key-here"
  DEBUG: "False"
  ALLOWED_HOSTS: "bsn.com,www.bsn.com"
  CORS_ALLOWED_ORIGINS: "https://bsn.com,https://www.bsn.com"
  MEDIA_URL: "/media/"
  STATIC_URL: "/static/"
  WEB3_PROVIDER_URI: "https://mainnet.infura.io/v3/your-infura-key"
  BSN_TOKEN_CONTRACT_ADDRESS: "0x..."
  BSN_NFT_CONTRACT_ADDRESS: "0x..."

---
# Secret for sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: bsn-secrets
  namespace: bsn-production
type: Opaque
data:
  django-secret-key: eW91ci1zZWNyZXQta2V5LWhlcmU=  # base64 encoded
  database-password: YnNuX3Bhc3N3b3Jk  # base64 encoded
  redis-password: cmVkaXNfcGFzc3dvcmQ=  # base64 encoded
  web3-provider-key: eW91ci1pbmZ1cmEta2V5  # base64 encoded

---
# Persistent Volume Claim for media files
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bsn-media-pvc
  namespace: bsn-production
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd

---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bsn-backend
  namespace: bsn-production
  labels:
    app: bsn-backend
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: bsn-backend
  template:
    metadata:
      labels:
        app: bsn-backend
        tier: backend
    spec:
      containers:
      - name: bsn-backend
        image: bsn/backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: DJANGO_SETTINGS_MODULE
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: DJANGO_SETTINGS_MODULE
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: REDIS_URL
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: CELERY_RESULT_BACKEND
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bsn-secrets
              key: django-secret-key
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: DEBUG
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: ALLOWED_HOSTS
        - name: CORS_ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: CORS_ALLOWED_ORIGINS
        - name: MEDIA_URL
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: MEDIA_URL
        - name: STATIC_URL
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: STATIC_URL
        - name: WEB3_PROVIDER_URI
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: WEB3_PROVIDER_URI
        - name: BSN_TOKEN_CONTRACT_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: BSN_TOKEN_CONTRACT_ADDRESS
        - name: BSN_NFT_CONTRACT_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: BSN_NFT_CONTRACT_ADDRESS
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: media-storage
          mountPath: /app/media
        - name: static-storage
          mountPath: /app/static
      volumes:
      - name: media-storage
        persistentVolumeClaim:
          claimName: bsn-media-pvc
      - name: static-storage
        emptyDir: {}

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bsn-frontend
  namespace: bsn-production
  labels:
    app: bsn-frontend
    tier: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: bsn-frontend
  template:
    metadata:
      labels:
        app: bsn-frontend
        tier: frontend
    spec:
      containers:
      - name: bsn-frontend
        image: bsn/frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: REACT_APP_API_URL
          value: "https://api.bsn.com"
        - name: REACT_APP_WS_URL
          value: "wss://api.bsn.com/ws/"
        - name: REACT_APP_WEB3_PROVIDER
          value: "https://mainnet.infura.io/v3/your-infura-key"
        - name: REACT_APP_BSN_TOKEN_ADDRESS
          value: "0x..."
        - name: REACT_APP_BSN_NFT_ADDRESS
          value: "0x..."
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

---
# Celery Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bsn-celery-worker
  namespace: bsn-production
  labels:
    app: bsn-celery-worker
    tier: worker
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: bsn-celery-worker
  template:
    metadata:
      labels:
        app: bsn-celery-worker
        tier: worker
    spec:
      containers:
      - name: bsn-celery-worker
        image: bsn/backend:latest
        command: ["celery", "-A", "bsn", "worker", "--loglevel=info"]
        env:
        - name: DJANGO_SETTINGS_MODULE
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: DJANGO_SETTINGS_MODULE
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: CELERY_RESULT_BACKEND
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: DATABASE_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bsn-secrets
              key: django-secret-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"

---
# Celery Beat Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bsn-celery-beat
  namespace: bsn-production
  labels:
    app: bsn-celery-beat
    tier: scheduler
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: bsn-celery-beat
  template:
    metadata:
      labels:
        app: bsn-celery-beat
        tier: scheduler
    spec:
      containers:
      - name: bsn-celery-beat
        image: bsn/backend:latest
        command: ["celery", "-A", "bsn", "beat", "--loglevel=info"]
        env:
        - name: DJANGO_SETTINGS_MODULE
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: DJANGO_SETTINGS_MODULE
        - name: CELERY_BROKER_URL
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: CELERY_BROKER_URL
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: CELERY_RESULT_BACKEND
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: bsn-config
              key: DATABASE_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: bsn-secrets
              key: django-secret-key
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: bsn-backend-service
  namespace: bsn-production
  labels:
    app: bsn-backend
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: bsn-backend

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: bsn-frontend-service
  namespace: bsn-production
  labels:
    app: bsn-frontend
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: bsn-frontend

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bsn-ingress
  namespace: bsn-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-buffers: "256k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "256k"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - bsn.com
    - www.bsn.com
    - api.bsn.com
    secretName: bsn-tls
  rules:
  - host: bsn.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bsn-frontend-service
            port:
              number: 3000
  - host: www.bsn.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bsn-frontend-service
            port:
              number: 3000
  - host: api.bsn.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bsn-backend-service
            port:
              number: 8000

---
# Horizontal Pod Autoscaler for Backend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bsn-backend-hpa
  namespace: bsn-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bsn-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min

---
# Horizontal Pod Autoscaler for Frontend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bsn-frontend-hpa
  namespace: bsn-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bsn-frontend
  minReplicas: 3
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min

---
# Horizontal Pod Autoscaler for Celery Workers
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: bsn-celery-worker-hpa
  namespace: bsn-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bsn-celery-worker
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 1
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min

---
# Pod Disruption Budget for High Availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: bsn-backend-pdb
  namespace: bsn-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: bsn-backend

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: bsn-frontend-pdb
  namespace: bsn-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: bsn-frontend

---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: bsn-network-policy
  namespace: bsn-production
spec:
  podSelector:
    matchLabels:
      app: bsn-backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: bsn-production
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: bsn-production
    ports:
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53 