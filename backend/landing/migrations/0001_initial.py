# Generated by Django 5.0.2 on 2025-06-19 11:47

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactForm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='new', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
            ],
            options={
                'db_table': 'contact_forms',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FaucetRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('network', models.CharField(choices=[('ethereum', 'Ethereum'), ('polygon', 'Polygon'), ('bsc', 'Binance Smart Chain'), ('solana', 'Solana')], max_length=20)),
                ('wallet_address', models.CharField(max_length=42)),
                ('amount_requested', models.DecimalField(decimal_places=6, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('transaction_hash', models.CharField(blank=True, max_length=66, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
            ],
            options={
                'db_table': 'faucet_requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ICOStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(unique=True)),
                ('total_raised_usd', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_tokens_sold', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('total_reservations', models.PositiveIntegerField(default=0)),
                ('total_payments', models.PositiveIntegerField(default=0)),
                ('new_users', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('total_referrals', models.PositiveIntegerField(default=0)),
                ('referral_commissions', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('ethereum_payments', models.PositiveIntegerField(default=0)),
                ('polygon_payments', models.PositiveIntegerField(default=0)),
                ('bsc_payments', models.PositiveIntegerField(default=0)),
                ('solana_payments', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ico_stats',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('subscription_type', models.CharField(choices=[('general', 'General Newsletter'), ('ico_updates', 'ICO Updates'), ('technical', 'Technical Updates'), ('all', 'All Updates')], default='general', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'newsletter_subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReferralCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('total_referrals', models.PositiveIntegerField(default=0)),
                ('total_commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_tokens', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'referral_codes',
            },
        ),
        migrations.CreateModel(
            name='ReferralProgram',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('referral_code', models.CharField(max_length=20)),
                ('commission_earned', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tokens_earned', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_paid_out', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid_out_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'referral_program',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TokenReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tokens_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('payment_method', models.CharField(choices=[('ethereum', 'Ethereum'), ('polygon', 'Polygon'), ('bsc', 'Binance Smart Chain'), ('solana', 'Solana')], max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('transaction_hash', models.CharField(blank=True, max_length=66, null=True)),
                ('wallet_address', models.CharField(max_length=42)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('referral_code', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'token_reservations',
                'ordering': ['-created_at'],
            },
        ),
    ]
